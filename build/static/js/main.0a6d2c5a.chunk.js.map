{"version":3,"sources":["Filter.js","PersonForm.js","Person.js","PersonsList.js","services/persons.js","Notification.js","App.js","index.js"],"names":["Filter","value","onChange","onBlur","PersonForm","props","onSubmit","nameValue","nameOnChange","numberValue","numberOnChange","type","Person","name","number","id","onDelete","onClick","PersonsList","personsArray","map","person","baseUrl","axios","get","newObject","post","put","delete","Notification","message","notificationType","className","App","useState","persons","setPersons","results","setResults","newName","setNewName","newNumber","setNewNumber","filter","setFilter","setMessage","setNotificationType","useEffect","personService","then","response","data","filterPersons","searched","filterPersonsByName","toLowerCase","includes","createPerson","concat","successfulCreationMessage","findPersonById","find","updatePerson","oldPerson","findPersonByName","newPerson","successfulUpdateMessage","catch","error","unsuccessfulMessage","updateLocalMemory","clearInput","resetMessage","setTimeout","successfulRemoveMessage","clearFilter","isNameRepeated","findIndex","event","target","preventDefault","alert","window","confirm","removedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a6d2c5a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ value, onChange, onBlur }) => {\n  return (\n    <div>\n      filter shown with\n      <input value={value} onChange={onChange} onBlur={onBlur} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = (props) => {\n  const { onSubmit, nameValue, nameOnChange, numberValue, numberOnChange } = {\n    ...props,\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        name: <input value={nameValue} onChange={nameOnChange} />\n      </div>\n      <div>\n        number: <input value={numberValue} onChange={numberOnChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Person = ({ name, number, id, onDelete }) => {\n  return (\n    <div>\n      {name} {number} <button onClick={onDelete(id)}>delete</button>\n    </div>\n  );\n};\n\nexport default Person;\n","import React from \"react\";\nimport Person from \"./Person\";\n\nconst PersonsList = ({ personsArray, onDelete }) => {\n  return (\n    <div>\n      {personsArray.map((person) => (\n        <Person\n          name={person.name}\n          number={person.number}\n          key={person.name}\n          id={person.id}\n          onDelete={onDelete}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default PersonsList;\n","import axios from \"axios\";\nconst baseUrl = \"http://localhost:3001/api/persons\";\n\nconst getAll = () => {\n  return axios.get(baseUrl);\n};\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject);\n};\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject);\n};\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove,\n};\n","import React from \"react\";\n\nconst Notification = ({ message, notificationType }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className={notificationType}>\n        {message}\n      </div>\n    )\n}\n\nexport default Notification;\n\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./Filter\";\nimport PersonForm from \"./PersonForm\";\nimport PersonsList from \"./PersonsList\";\nimport personService from \"./services/persons\";\nimport Notification from \"./Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [results, setResults] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [notificationType, setNotificationType] = useState(\"\")\n\n  useEffect(() => {\n    personService.getAll().then((response) => {\n      setPersons(response.data);\n    });\n  }, []);\n\n  const handleNameChange = (event) => {\n    clearFilter();\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    let searched = event.target.value;\n    setFilter(searched);\n    filterPersons(searched);\n  };\n\n  const filterPersons = (searched) => {\n    setResults(filterPersonsByName(searched));\n  };\n\n  const filterPersonsByName = (name) => {\n    return persons.filter((person) =>\n      person.name.toLowerCase().includes(name.toLowerCase())\n    );\n  };\n\n  const addNewPerson = (event) => {\n    event.preventDefault();\n    if (newName === \"\") {\n      return alert(\"Not a valid name\");\n    }\n    if (\n      isNameRepeated(newName) &&\n      window.confirm(\n        `${newName} is already on the phonebook, replace the old number with a new one?`\n      )\n    ) {\n      updatePerson();\n      return;\n    }\n    createPerson();\n    clearInput();\n\n  };\n\n  const createPerson = () => {\n    const person = {\n      name: newName,\n      number: newNumber,\n    };\n    personService\n      .create(person)\n      .then((response) => setPersons(persons.concat(response.data)))\n      .then(successfulCreationMessage());\n  };\n\n  const removePerson = (id) => () => {\n    let removedPerson = findPersonById(id);\n    if (\n      window.confirm(`Are you sure you want to delete ${removedPerson.name}`)\n    ) {\n      personService\n      .remove(id)\n      .then(() => setPersons(persons.filter((person) => person.name !== removedPerson.name)))\n      .then(successfulRemoveMessage(removedPerson.name))\n      .catch(error => {\n        unsuccessfulMessage(removedPerson.name)\n        updateLocalMemory(id)\n      });\n    }\n  };\n\n  const findPersonById = (id) => {\n    return persons.find((person) => person.id === id);\n  };\n\n  const updatePerson = () => {\n    const oldPerson = findPersonByName(newName);\n    const newPerson = {\n      ...oldPerson,\n      number: newNumber,\n    };\n\n    personService\n      .update(newPerson.id, newPerson)\n      .then((response) => setPersons(persons.map((person) =>\n      person.name === response.data.name ? response.data : person)))\n      .then(successfulUpdateMessage())\n      .catch(error => {\n        unsuccessfulMessage(newPerson.name)\n        updateLocalMemory(newPerson.id)\n      });\n    clearInput();\n  };\n\n  const updateLocalMemory = (id) => {\n    setPersons(persons.filter(person => person.id !== id))\n  }\n\n  const resetMessage = () => {\n    setTimeout(() => setMessage(null), 5000);\n  }\n\n  const successfulCreationMessage = () => {\n    setMessage(`New person added: ${newName}`);\n    setNotificationType(\"success\");\n    resetMessage();\n  }\n\n  const successfulUpdateMessage = () => {\n    setMessage(`Successfully updated ${newName}`);\n    setNotificationType(\"success\");\n    resetMessage();\n  }\n\n  const successfulRemoveMessage = (name) => {\n    setMessage(`Successfully removed ${name}`);\n    setNotificationType(\"success\");\n    resetMessage();\n  }\n\n  const unsuccessfulMessage = (name) => {\n    setMessage(`${name} has been already removed from the server`);\n    setNotificationType(\"error\");\n    resetMessage();\n  }\n\n  const findPersonByName = (name) => {\n    return persons.find(\n      (person) => person.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  const clearInput = () => {\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const clearFilter = () => {\n    setFilter(\"\");\n    setResults([]);\n  };\n\n  const isNameRepeated = (name) => {\n    if (persons.findIndex((person) => person.name === name) !== -1) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} notificationType={notificationType} />\n      <Filter\n        value={filter}\n        onChange={handleFilterChange}\n        onBlur={clearFilter}\n      />\n      <h3>add a new</h3>\n      <PersonForm\n        onSubmit={addNewPerson}\n        nameValue={newName}\n        nameOnChange={handleNameChange}\n        numberValue={newNumber}\n        numberOnChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <PersonsList\n        personsArray={filter === \"\" ? persons : results}\n        onDelete={removePerson}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\"\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}