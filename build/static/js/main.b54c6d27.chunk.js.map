{"version":3,"sources":["Filter.js","PersonForm.js","Person.js","PersonsList.js","services/persons.js","Notification.js","App.js","index.js"],"names":["Filter","value","onChange","onBlur","PersonForm","props","onSubmit","nameValue","nameOnChange","numberValue","numberOnChange","type","Person","name","number","id","onDelete","onClick","PersonsList","personsArray","map","person","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","notificationType","className","App","useState","persons","setPersons","results","setResults","newName","setNewName","newNumber","setNewNumber","filter","setFilter","setMessage","setNotificationType","useEffect","personService","filterPersons","searched","filterPersonsByName","toLowerCase","includes","createPerson","concat","successfulCreationMessage","findPersonById","find","updatePerson","oldPerson","findPersonByName","newPerson","successfulUpdateMessage","catch","error","unsuccessfulMessage","updateLocalMemory","clearInput","resetMessage","setTimeout","successfulRemoveMessage","clearFilter","isNameRepeated","findIndex","event","target","preventDefault","alert","window","confirm","removedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b54c6d27.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ value, onChange, onBlur }) => {\n  return (\n    <div>\n      filter shown with\n      <input value={value} onChange={onChange} onBlur={onBlur} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = (props) => {\n  const { onSubmit, nameValue, nameOnChange, numberValue, numberOnChange } = {\n    ...props,\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        name: <input value={nameValue} onChange={nameOnChange} />\n      </div>\n      <div>\n        number: <input value={numberValue} onChange={numberOnChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Person = ({ name, number, id, onDelete }) => {\n  return (\n    <div>\n      {name} {number} <button onClick={onDelete(id)}>delete</button>\n    </div>\n  );\n};\n\nexport default Person;\n","import React from \"react\";\nimport Person from \"./Person\";\n\nconst PersonsList = ({ personsArray, onDelete }) => {\n  return (\n    <div>\n      {personsArray.map((person) => (\n        <Person\n          name={person.name}\n          number={person.number}\n          key={person.name}\n          id={person.id}\n          onDelete={onDelete}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default PersonsList;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove,\n};\n","import React from \"react\";\n\nconst Notification = ({ message, notificationType }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className={notificationType}>\n        {message}\n      </div>\n    )\n}\n\nexport default Notification;\n\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./Filter\";\nimport PersonForm from \"./PersonForm\";\nimport PersonsList from \"./PersonsList\";\nimport personService from \"./services/persons\";\nimport Notification from \"./Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [results, setResults] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [notificationType, setNotificationType] = useState(\"\");\n\n  useEffect(() => {\n    personService.getAll().then((response) => {\n      setPersons(response);\n    });\n  }, []);\n\n  const handleNameChange = (event) => {\n    clearFilter();\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    let searched = event.target.value;\n    setFilter(searched);\n    filterPersons(searched);\n  };\n\n  const filterPersons = (searched) => {\n    setResults(filterPersonsByName(searched));\n  };\n\n  const filterPersonsByName = (name) => {\n    return persons.filter((person) =>\n      person.name.toLowerCase().includes(name.toLowerCase())\n    );\n  };\n\n  const addNewPerson = (event) => {\n    event.preventDefault();\n    if (newName === \"\") {\n      return alert(\"Not a valid name\");\n    }\n    if (\n      isNameRepeated(newName) &&\n      window.confirm(\n        `${newName} is already on the phonebook, replace the old number with a new one?`\n      )\n    ) {\n      updatePerson();\n      return;\n    }\n    createPerson();\n    clearInput();\n  };\n\n  const createPerson = () => {\n    const person = {\n      name: newName,\n      number: newNumber,\n    };\n    personService\n      .create(person)\n      .then((response) => setPersons(persons.concat(response)))\n      .then(successfulCreationMessage());\n  };\n\n  const removePerson = (id) => () => {\n    let removedPerson = findPersonById(id);\n    if (\n      window.confirm(`Are you sure you want to delete ${removedPerson.name}`)\n    ) {\n      personService\n        .remove(id)\n        .then(() =>\n          setPersons(\n            persons.filter((person) => person.name !== removedPerson.name)\n          )\n        )\n        .then(successfulRemoveMessage(removedPerson.name))\n        .catch((error) => {\n          unsuccessfulMessage(removedPerson.name);\n          updateLocalMemory(id);\n        });\n    }\n  };\n\n  const findPersonById = (id) => {\n    return persons.find((person) => person.id === id);\n  };\n\n  const updatePerson = () => {\n    const oldPerson = findPersonByName(newName);\n    const newPerson = {\n      ...oldPerson,\n      number: newNumber,\n    };\n\n    personService\n      .update(newPerson.id, newPerson)\n      .then((response) =>\n        setPersons(\n          persons.map((person) =>\n            person.name === response.name ? response : person\n          )\n        )\n      )\n      .then(successfulUpdateMessage())\n      .catch((error) => {\n        unsuccessfulMessage(newPerson.name);\n        updateLocalMemory(newPerson.id);\n      });\n    clearInput();\n  };\n\n  const updateLocalMemory = (id) => {\n    setPersons(persons.filter((person) => person.id !== id));\n  };\n\n  const resetMessage = () => {\n    setTimeout(() => setMessage(null), 5000);\n  };\n\n  const successfulCreationMessage = () => {\n    setMessage(`New person added: ${newName}`);\n    setNotificationType(\"success\");\n    resetMessage();\n  };\n\n  const successfulUpdateMessage = () => {\n    setMessage(`Successfully updated ${newName}`);\n    setNotificationType(\"success\");\n    resetMessage();\n  };\n\n  const successfulRemoveMessage = (name) => {\n    setMessage(`Successfully removed ${name}`);\n    setNotificationType(\"success\");\n    resetMessage();\n  };\n\n  const unsuccessfulMessage = (name) => {\n    setMessage(`${name} has been already removed from the server`);\n    setNotificationType(\"error\");\n    resetMessage();\n  };\n\n  const findPersonByName = (name) => {\n    return persons.find(\n      (person) => person.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  const clearInput = () => {\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const clearFilter = () => {\n    setFilter(\"\");\n    setResults([]);\n  };\n\n  const isNameRepeated = (name) => {\n    if (persons.findIndex((person) => person.name === name) !== -1) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} notificationType={notificationType} />\n      <Filter\n        value={filter}\n        onChange={handleFilterChange}\n        onBlur={clearFilter}\n      />\n      <h3>add a new</h3>\n      <PersonForm\n        onSubmit={addNewPerson}\n        nameValue={newName}\n        nameOnChange={handleNameChange}\n        numberValue={newNumber}\n        numberOnChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <PersonsList\n        personsArray={filter === \"\" ? persons : results}\n        onDelete={removePerson}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\"\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}